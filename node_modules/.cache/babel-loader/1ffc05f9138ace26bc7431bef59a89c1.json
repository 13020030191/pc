{"ast":null,"code":"import _objectSpread from \"/Users/yzf/Desktop/github/pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"antd/es/notification/style/css\";\nimport _notification from \"antd/es/notification\";\nimport 'whatwg-fetch';\nconst codeMessage = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户得到授权，但是访问是被禁止的。',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器。',\n  502: '网关错误。',\n  503: '服务不可用，服务器暂时过载或维护。',\n  504: '网关超时。'\n};\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const errortext = codeMessage[response.status] || response.statusText;\n\n  _notification.error({\n    message: \"\\u8BF7\\u6C42\\u9519\\u8BEF \".concat(response.status, \": \").concat(response.url),\n    description: errortext\n  });\n\n  const error = new Error(errortext);\n  error.name = response.status;\n  error.response = response;\n  throw error;\n}\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\n\n\nexport default function request(url, options) {\n  const defaultOptions = {// credentials: 'include',\n  };\n\n  const newOptions = _objectSpread({}, defaultOptions, options);\n\n  if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\n    if (!(newOptions.body instanceof FormData)) {\n      newOptions.headers = _objectSpread({\n        Accept: 'application/json',\n        'Content-Type': 'application/json; charset=utf-8'\n      }, newOptions.headers);\n      newOptions.body = JSON.stringify(newOptions.body);\n    } else {\n      // newOptions.body is FormData\n      newOptions.headers = _objectSpread({\n        Accept: 'application/json'\n      }, newOptions.headers);\n    }\n  }\n\n  return fetch(url, newOptions).then(checkStatus).then(response => {\n    if (newOptions.method === 'DELETE' || response.status === 204) {\n      return response.text();\n    }\n\n    return response.json();\n  }).catch(e => {\n    const status = e.name;\n\n    if (status === 401) {\n      /* dispatch({\n         type: 'login/logout',\n       });*/\n      return;\n    }\n\n    if (status === 403) {\n      // dispatch(routerRedux.push('/exception/403'));\n      return;\n    }\n\n    if (status <= 504 && status >= 500) {\n      // dispatch(routerRedux.push('/exception/500'));\n      return;\n    }\n\n    if (status >= 404 && status < 422) {// dispatch(routerRedux.push('/exception/404'));\n    }\n  });\n}","map":{"version":3,"sources":["/Users/yzf/Desktop/github/pc/src/utils/request.js"],"names":["codeMessage","checkStatus","response","status","errortext","statusText","error","message","url","description","Error","name","request","options","defaultOptions","newOptions","method","body","FormData","headers","Accept","JSON","stringify","fetch","then","text","json","catch","e"],"mappings":";;;AAAA,OAAQ,cAAR;AAGA,MAAMA,WAAW,GAAG;AAClB,OAAK,eADa;AAElB,OAAK,YAFa;AAGlB,OAAK,qBAHa;AAIlB,OAAK,SAJa;AAKlB,OAAK,6BALa;AAMlB,OAAK,sBANa;AAOlB,OAAK,mBAPa;AAQlB,OAAK,4BARa;AASlB,OAAK,WATa;AAUlB,OAAK,qBAVa;AAWlB,OAAK,oBAXa;AAYlB,OAAK,iBAZa;AAalB,OAAK,OAba;AAclB,OAAK,mBAda;AAelB,OAAK;AAfa,CAApB;;AAiBA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,MAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAnB,IAA0BD,QAAQ,CAACC,MAAT,GAAkB,GAAhD,EAAqD;AACnD,WAAOD,QAAP;AACD;;AACD,QAAME,SAAS,GAAGJ,WAAW,CAACE,QAAQ,CAACC,MAAV,CAAX,IAAgCD,QAAQ,CAACG,UAA3D;;AACA,gBAAaC,KAAb,CAAmB;AACjBC,IAAAA,OAAO,qCAAUL,QAAQ,CAACC,MAAnB,eAA8BD,QAAQ,CAACM,GAAvC,CADU;AAEjBC,IAAAA,WAAW,EAAEL;AAFI,GAAnB;;AAIA,QAAME,KAAK,GAAG,IAAII,KAAJ,CAAUN,SAAV,CAAd;AACAE,EAAAA,KAAK,CAACK,IAAN,GAAaT,QAAQ,CAACC,MAAtB;AACAG,EAAAA,KAAK,CAACJ,QAAN,GAAiBA,QAAjB;AACA,QAAMI,KAAN;AACD;AAED;;;;;;;;;AAOA,eAAe,SAASM,OAAT,CAAiBJ,GAAjB,EAAsBK,OAAtB,EAA+B;AAC5C,QAAMC,cAAc,GAAG,CACrB;AADqB,GAAvB;;AAGA,QAAMC,UAAU,qBAAQD,cAAR,EAA2BD,OAA3B,CAAhB;;AACA,MAAIE,UAAU,CAACC,MAAX,KAAsB,MAAtB,IAAgCD,UAAU,CAACC,MAAX,KAAsB,KAA1D,EAAiE;AAC/D,QAAI,EAAED,UAAU,CAACE,IAAX,YAA2BC,QAA7B,CAAJ,EAA4C;AAC1CH,MAAAA,UAAU,CAACI,OAAX;AACEC,QAAAA,MAAM,EAAE,kBADV;AAEE,wBAAgB;AAFlB,SAGKL,UAAU,CAACI,OAHhB;AAKAJ,MAAAA,UAAU,CAACE,IAAX,GAAkBI,IAAI,CAACC,SAAL,CAAeP,UAAU,CAACE,IAA1B,CAAlB;AACD,KAPD,MAOO;AACL;AACAF,MAAAA,UAAU,CAACI,OAAX;AACEC,QAAAA,MAAM,EAAE;AADV,SAEKL,UAAU,CAACI,OAFhB;AAID;AACF;;AAED,SAAOI,KAAK,CAACf,GAAD,EAAMO,UAAN,CAAL,CACJS,IADI,CACCvB,WADD,EAEJuB,IAFI,CAECtB,QAAQ,IAAI;AAChB,QAAIa,UAAU,CAACC,MAAX,KAAsB,QAAtB,IAAkCd,QAAQ,CAACC,MAAT,KAAoB,GAA1D,EAA+D;AAC7D,aAAOD,QAAQ,CAACuB,IAAT,EAAP;AACD;;AACD,WAAOvB,QAAQ,CAACwB,IAAT,EAAP;AACD,GAPI,EAQJC,KARI,CAQEC,CAAC,IAAI;AACV,UAAMzB,MAAM,GAAGyB,CAAC,CAACjB,IAAjB;;AACA,QAAIR,MAAM,KAAK,GAAf,EAAoB;AACnB;;;AAGC;AACD;;AACD,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAClB;AACA;AACD;;AACD,QAAIA,MAAM,IAAI,GAAV,IAAiBA,MAAM,IAAI,GAA/B,EAAoC;AAClC;AACA;AACD;;AACD,QAAIA,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAA9B,EAAmC,CACjC;AACD;AACF,GA3BI,CAAP;AA4BD","sourcesContent":["import  'whatwg-fetch';\nimport { notification } from 'antd';\n\nconst codeMessage = {\n  200: '服务器成功返回请求的数据。',\n  201: '新建或修改数据成功。',\n  202: '一个请求已经进入后台排队（异步任务）。',\n  204: '删除数据成功。',\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\n  401: '用户没有权限（令牌、用户名、密码错误）。',\n  403: '用户得到授权，但是访问是被禁止的。',\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\n  406: '请求的格式不可得。',\n  410: '请求的资源被永久删除，且不会再得到的。',\n  422: '当创建一个对象时，发生一个验证错误。',\n  500: '服务器发生错误，请检查服务器。',\n  502: '网关错误。',\n  503: '服务不可用，服务器暂时过载或维护。',\n  504: '网关超时。',\n};\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const errortext = codeMessage[response.status] || response.statusText;\n  notification.error({\n    message: `请求错误 ${response.status}: ${response.url}`,\n    description: errortext,\n  });\n  const error = new Error(errortext);\n  error.name = response.status;\n  error.response = response;\n  throw error;\n}\n\n/**\n * Requests a URL, returning a promise.\n *\n * @param  {string} url       The URL we want to request\n * @param  {object} [options] The options we want to pass to \"fetch\"\n * @return {object}           An object containing either \"data\" or \"err\"\n */\nexport default function request(url, options) {\n  const defaultOptions = {\n    // credentials: 'include',\n  };\n  const newOptions = { ...defaultOptions, ...options };\n  if (newOptions.method === 'POST' || newOptions.method === 'PUT') {\n    if (!(newOptions.body instanceof FormData)) {\n      newOptions.headers = {\n        Accept: 'application/json',\n        'Content-Type': 'application/json; charset=utf-8',\n        ...newOptions.headers,\n      };\n      newOptions.body = JSON.stringify(newOptions.body);\n    } else {\n      // newOptions.body is FormData\n      newOptions.headers = {\n        Accept: 'application/json',\n        ...newOptions.headers,\n      };\n    }\n  }\n\n  return fetch(url, newOptions)\n    .then(checkStatus)\n    .then(response => {\n      if (newOptions.method === 'DELETE' || response.status === 204) {\n        return response.text();\n      }\n      return response.json();\n    })\n    .catch(e => {\n      const status = e.name;\n      if (status === 401) {\n       /* dispatch({\n          type: 'login/logout',\n        });*/\n        return;\n      }\n      if (status === 403) {\n        // dispatch(routerRedux.push('/exception/403'));\n        return;\n      }\n      if (status <= 504 && status >= 500) {\n        // dispatch(routerRedux.push('/exception/500'));\n        return;\n      }\n      if (status >= 404 && status < 422) {\n        // dispatch(routerRedux.push('/exception/404'));\n      }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}