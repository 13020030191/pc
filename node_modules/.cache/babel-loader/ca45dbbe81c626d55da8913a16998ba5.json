{"ast":null,"code":"import \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nimport \"antd/es/modal/style/css\";\nimport _Modal from \"antd/es/modal\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/yzf/Desktop/antd/src/layouts/BasicLayout.js\";\n\nimport React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport DocumentTitle from 'react-document-title';\nimport pathToRegexp from 'path-to-regexp';\nimport { enquireScreen, unenquireScreen } from 'enquire-js';\nimport { ContainerQuery } from 'react-container-query';\nimport classNames from 'classnames';\nimport GlobalHeader from '../components/GlobalHeader';\nimport Footer from '../components/Footer';\nimport SiderMenu from '../components/SiderMenu';\nimport actions from '../redux/actions';\nimport MenuContext from '../utils/context';\nimport { getMenuData } from '../router/menu';\nimport { getRoutes } from '../utils/utils';\nimport NotFound from '../pages/Exception/404';\nimport logo from \"../assets/images/logo.svg\";\nconst confirm = _Modal.confirm;\nconst Content = _Layout.Content,\n      Header = _Layout.Header;\nconst query = {\n  'screen-xs': {\n    maxWidth: 575\n  },\n  'screen-sm': {\n    minWidth: 576,\n    maxWidth: 767\n  },\n  'screen-md': {\n    minWidth: 768,\n    maxWidth: 991\n  },\n  'screen-lg': {\n    minWidth: 992,\n    maxWidth: 1199\n  },\n  'screen-xl': {\n    minWidth: 1200,\n    maxWidth: 1599\n  },\n  'screen-xxl': {\n    minWidth: 1600\n  }\n};\nlet isMobile;\nenquireScreen(b => {\n  isMobile = b;\n}); //根据菜单获取重定向地址\n\nconst redirectData = [];\n\nconst getRedirect = item => {\n  if (item && item.children) {\n    if (item.children[0] && item.children[0].path) {\n      redirectData.push({\n        from: \"\".concat(item.path),\n        to: \"\".concat(item.children[0].path)\n      });\n      item.children.forEach(children => {\n        getRedirect(children);\n      });\n    }\n  }\n};\n\ngetMenuData().forEach(getRedirect);\n/**\n * 获取面包屑映射\n * @param menuData 菜单配置\n * @param routerData 路由配置\n */\n\nconst getBreadcrumbNameMap = (menuData, routerData) => {\n  let result = {};\n  let childResult = {};\n\n  for (let i of menuData) {\n    if (!routerData[i.path]) {\n      result[i.path] = i;\n    }\n\n    if (i.children) {\n      Object.assign(childResult, getBreadcrumbNameMap(i.children, routerData));\n    }\n  }\n\n  return Object.assign({}, routerData, result, childResult);\n};\n\nlet BasicLayout = (_dec = connect(({\n  userInfo\n}) => ({\n  userInfo\n}), dispatch => ({\n  setUserInfo: data => dispatch(actions.setUserInfo(data))\n})), _dec(_class = (_temp = class BasicLayout extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPageTitle = () => {\n      let _this$props = this.props,\n          routerData = _this$props.routerData,\n          location = _this$props.location;\n      let pathname = location.pathname;\n      let title = 'yzf';\n      let currentRouterData = null;\n      Object.keys(routerData).forEach(key => {\n        if (pathToRegexp(key).test(pathname)) {\n          currentRouterData = routerData[key];\n        }\n      });\n\n      if (currentRouterData && currentRouterData.name) {\n        title = \"\".concat(currentRouterData.name, \" - \").concat(title);\n      }\n\n      return title;\n    };\n\n    this.handleNoticeClear = tabTitle => {\n      let _this$state = this.state,\n          notices = _this$state.notices,\n          currentUser = _this$state.currentUser;\n      let newNotice = [];\n      notices.map(notice => {\n        if (notice.type !== tabTitle) {\n          newNotice.push(notice);\n        }\n\n        return null;\n      });\n      let data = Object.assign({}, currentUser, {\n        notifyCount: newNotice.length\n      });\n      this.setState({\n        notices: newNotice,\n        currentUser: data\n      });\n\n      _message.success(\"\\u6E05\\u7A7A\\u4E86\".concat(tabTitle));\n    };\n\n    this.handleMenuCollapse = collapsed => {\n      this.setState({\n        collapsed: collapsed\n      });\n    };\n\n    this.handleMenuClick = ({\n      key\n    }) => {\n      let _this$props2 = this.props,\n          history = _this$props2.history,\n          setUserInfo = _this$props2.setUserInfo;\n\n      if (key === 'userCenter') {\n        history.push('/account/center');\n      } else if (key === 'userSettings') {\n        history.push('/account/settings');\n      } else if (key === 'triggerError') {\n        console.log('触发报错');\n        history.push('/exception/trigger');\n      } else if (key === 'logout') {\n        confirm({\n          title: '确认要退出登录吗？',\n          okText: '确认',\n          cancelText: '取消',\n          onOk: () => {\n            console.log('退出登录');\n            setUserInfo('');\n          },\n          onCancel: () => {}\n        });\n      }\n    };\n\n    this.handleNoticeVisibleChange = visible => {\n      if (visible) {\n        this.setState({\n          fetchingNotices: true\n        });\n        setTimeout(() => {\n          this.setState({\n            fetchingNotices: false\n          });\n        }, 200);\n      }\n    };\n\n    this.state = {\n      currentUser: {\n        avatar: 'http://q.qlogo.cn/g?b=qq&nk=1005915059&s=100',\n        name: props.userInfo,\n        notifyCount: 12,\n        userid: '00000001'\n      },\n      isMobile: isMobile,\n      fetchingNotices: false,\n      collapsed: false //菜单展开收缩\n\n    };\n  }\n\n  getContext() {\n    let _this$props3 = this.props,\n        routerData = _this$props3.routerData,\n        location = _this$props3.location;\n    return {\n      location,\n      breadcrumbNameMap: getBreadcrumbNameMap(getMenuData(), routerData)\n    };\n  }\n\n  componentDidMount() {\n    this.enquireHandler = enquireScreen(mobile => {\n      this.setState({\n        isMobile: mobile\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    unenquireScreen(this.enquireHandler);\n  } //获取页面标题\n\n\n  render() {\n    let _this$props4 = this.props,\n        match = _this$props4.match,\n        routerData = _this$props4.routerData;\n    let _this$state2 = this.state,\n        currentUser = _this$state2.currentUser,\n        isMobile = _this$state2.isMobile,\n        fetchingNotices = _this$state2.fetchingNotices,\n        collapsed = _this$state2.collapsed,\n        notices = _this$state2.notices;\n    let routes = getRoutes(match.path, routerData);\n    let bashRedirect = routes[0].path;\n    let layout = React.createElement(_Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(SiderMenu // logo={logo}\n    , {\n      menuData: getMenuData(),\n      collapsed: collapsed,\n      isMobile: isMobile,\n      onCollapse: this.handleMenuCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(_Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Header, {\n      style: {\n        padding: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(GlobalHeader, {\n      logo: logo,\n      currentUser: currentUser,\n      isMobile: isMobile,\n      fetchingNotices: fetchingNotices,\n      notices: notices,\n      collapsed: collapsed,\n      onNoticeClear: this.handleNoticeClear,\n      onCollapse: this.handleMenuCollapse,\n      onMenuClick: this.handleMenuClick,\n      onNoticeVisibleChange: this.handleNoticeVisibleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(Content, {\n      style: {\n        margin: '24px 24px 0',\n        height: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, redirectData.map(item => {\n      return React.createElement(Redirect, {\n        exact: true,\n        key: item.from,\n        from: item.from,\n        to: item.to,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      });\n    }), routes.map(item => {\n      return React.createElement(Route, {\n        key: item.key,\n        path: item.path,\n        component: item.component,\n        exact: item.exact,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      });\n    }), React.createElement(Redirect, {\n      exact: true,\n      from: \"/\",\n      to: bashRedirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(Route, {\n      render: NotFound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    })))));\n    return React.createElement(DocumentTitle, {\n      title: this.getPageTitle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(ContainerQuery, {\n      query: query,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, params => React.createElement(MenuContext.Provider, {\n      value: this.getContext(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classNames(params),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, layout))));\n  }\n\n}, _temp)) || _class);\nexport default BasicLayout;","map":{"version":3,"sources":["/Users/yzf/Desktop/antd/src/layouts/BasicLayout.js"],"names":["React","Component","Redirect","Route","Switch","connect","DocumentTitle","pathToRegexp","enquireScreen","unenquireScreen","ContainerQuery","classNames","GlobalHeader","Footer","SiderMenu","actions","MenuContext","getMenuData","getRoutes","NotFound","confirm","Content","Header","query","maxWidth","minWidth","isMobile","b","redirectData","getRedirect","item","children","path","push","from","to","forEach","getBreadcrumbNameMap","menuData","routerData","result","childResult","i","Object","assign","BasicLayout","userInfo","dispatch","setUserInfo","data","constructor","props","getPageTitle","location","pathname","title","currentRouterData","keys","key","test","name","handleNoticeClear","tabTitle","state","notices","currentUser","newNotice","map","notice","type","notifyCount","length","setState","success","handleMenuCollapse","collapsed","handleMenuClick","history","console","log","okText","cancelText","onOk","onCancel","handleNoticeVisibleChange","visible","fetchingNotices","setTimeout","avatar","userid","getContext","breadcrumbNameMap","componentDidMount","enquireHandler","mobile","componentWillUnmount","render","match","routes","bashRedirect","layout","padding","logo","margin","height","component","exact","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport DocumentTitle from 'react-document-title'\nimport pathToRegexp from 'path-to-regexp'\nimport { enquireScreen, unenquireScreen } from 'enquire-js'\nimport { ContainerQuery } from 'react-container-query'\nimport classNames from 'classnames'\nimport { Layout, message, Modal } from 'antd'\nimport GlobalHeader from '../components/GlobalHeader'\nimport Footer from '../components/Footer'\nimport SiderMenu from '../components/SiderMenu'\nimport actions from '../redux/actions'\nimport MenuContext from '../utils/context'\nimport { getMenuData } from '../router/menu'\nimport { getRoutes } from '../utils/utils'\nimport NotFound from '../pages/Exception/404'\n\nimport logo from '../assets/images/logo.svg'\n\nconst confirm = Modal.confirm\nconst { Content, Header } = Layout\nconst query = {\n  'screen-xs': {\n    maxWidth: 575,\n  },\n  'screen-sm': {\n    minWidth: 576,\n    maxWidth: 767,\n  },\n  'screen-md': {\n    minWidth: 768,\n    maxWidth: 991,\n  },\n  'screen-lg': {\n    minWidth: 992,\n    maxWidth: 1199,\n  },\n  'screen-xl': {\n    minWidth: 1200,\n    maxWidth: 1599,\n  },\n  'screen-xxl': {\n    minWidth: 1600,\n  },\n}\n\nlet isMobile\nenquireScreen(b => {\n  isMobile = b\n})\n\n//根据菜单获取重定向地址\nconst redirectData = []\nconst getRedirect = item => {\n  if (item && item.children) {\n    if (item.children[0] && item.children[0].path) {\n      redirectData.push({\n        from: `${item.path}`,\n        to: `${item.children[0].path}`,\n      })\n      item.children.forEach(children => {\n        getRedirect(children)\n      })\n    }\n  }\n}\ngetMenuData().forEach(getRedirect)\n\n/**\n * 获取面包屑映射\n * @param menuData 菜单配置\n * @param routerData 路由配置\n */\nconst getBreadcrumbNameMap = (menuData, routerData) => {\n  let result = {}\n  let childResult = {}\n  for (let i of menuData) {\n    if (!routerData[i.path]) {\n      result[i.path] = i\n    }\n    if (i.children) {\n      Object.assign(childResult, getBreadcrumbNameMap(i.children, routerData))\n    }\n  }\n  return Object.assign({}, routerData, result, childResult)\n}\n\n@connect(\n  ({ userInfo }) => ({ userInfo }),\n  dispatch => ({\n    setUserInfo: data => dispatch(actions.setUserInfo(data))\n  })\n)\nclass BasicLayout extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      currentUser: {\n        avatar: 'http://q.qlogo.cn/g?b=qq&nk=1005915059&s=100',\n        name: props.userInfo,\n        notifyCount: 12,\n        userid: '00000001',\n      },\n      isMobile: isMobile,\n      fetchingNotices: false,\n\n      collapsed: false,//菜单展开收缩\n    }\n  }\n\n  getContext () {\n    let { routerData, location } = this.props\n    return {\n      location,\n      breadcrumbNameMap: getBreadcrumbNameMap(getMenuData(), routerData),\n    }\n  }\n\n  componentDidMount () {\n    this.enquireHandler = enquireScreen(mobile => {\n      this.setState({\n        isMobile: mobile,\n      })\n    })\n  }\n\n  componentWillUnmount () {\n    unenquireScreen(this.enquireHandler)\n  }\n\n  //获取页面标题\n  getPageTitle = () => {\n    let { routerData, location } = this.props\n    let { pathname } = location\n    let title = 'yzf'\n    let currentRouterData = null\n    Object.keys(routerData).forEach(key => {\n      if (pathToRegexp(key).test(pathname)) {\n        currentRouterData = routerData[key]\n      }\n    })\n    if (currentRouterData && currentRouterData.name) {\n      title = `${currentRouterData.name} - ${title}`\n    }\n    return title\n  }\n\n  //消息清除\n  handleNoticeClear = (tabTitle) => {\n    let { notices, currentUser } = this.state\n    let newNotice = []\n    notices.map(notice => {\n      if (notice.type !== tabTitle) {\n        newNotice.push(notice)\n      }\n      return null\n    })\n    let data = Object.assign({}, currentUser, { notifyCount: newNotice.length })\n    this.setState({\n      notices: newNotice,\n      currentUser: data,\n    })\n    message.success(`清空了${tabTitle}`)\n  }\n\n  //控制左侧menu收缩展开\n  handleMenuCollapse = (collapsed) => {\n    this.setState({\n      collapsed: collapsed,\n    })\n  }\n\n  //Dropdown menu菜单点击事件\n  handleMenuClick = ({ key }) => {\n    let { history, setUserInfo } = this.props\n    if (key === 'userCenter') {\n      history.push('/account/center')\n    } else if (key === 'userSettings') {\n      history.push('/account/settings')\n    } else if (key === 'triggerError') {\n      console.log('触发报错')\n      history.push('/exception/trigger')\n    } else if (key === 'logout') {\n      confirm({\n        title: '确认要退出登录吗？',\n        okText: '确认',\n        cancelText: '取消',\n        onOk: () => {\n          console.log('退出登录')\n          setUserInfo('')\n        },\n        onCancel: () => {},\n      })\n    }\n  }\n\n  //notice框点击事件\n  handleNoticeVisibleChange = (visible) => {\n    if (visible) {\n      this.setState({\n        fetchingNotices: true,\n      })\n      setTimeout(() => {\n        this.setState({\n          fetchingNotices: false,\n        })\n      }, 200)\n    }\n  }\n\n  render () {\n    let { match, routerData } = this.props\n    let { currentUser, isMobile, fetchingNotices, collapsed, notices } = this.state\n    let routes = getRoutes(match.path, routerData)\n    let bashRedirect = routes[0].path\n    let layout = (\n      <Layout>\n        <SiderMenu\n          // logo={logo}\n          menuData={getMenuData()}\n          collapsed={collapsed}\n          isMobile={isMobile}\n          onCollapse={this.handleMenuCollapse}\n        />\n        <Layout>\n          <Header style={{ padding: 0 }}>\n            <GlobalHeader\n              logo={logo}\n              currentUser={currentUser}\n              isMobile={isMobile}\n              fetchingNotices={fetchingNotices}\n              notices={notices}\n              collapsed={collapsed}\n              onNoticeClear={this.handleNoticeClear}\n              onCollapse={this.handleMenuCollapse}\n              onMenuClick={this.handleMenuClick}\n              onNoticeVisibleChange={this.handleNoticeVisibleChange}\n            />\n          </Header>\n          <Content style={{ margin: '24px 24px 0', height: '100%' }}>\n            <Switch>\n              {\n                redirectData.map(item => {\n                  return <Redirect\n                    exact\n                    key={item.from}\n                    from={item.from}\n                    to={item.to}/>\n                })\n              }\n              {\n                routes.map(item => {\n                  return <Route\n                    key={item.key}\n                    path={item.path}\n                    component={item.component}\n                    exact={item.exact}\n                  />\n                })\n              }\n              <Redirect exact from=\"/\" to={bashRedirect}/>\n              <Route render={NotFound}/>\n            </Switch>\n          </Content>\n          {/* <Footer/> */}\n        </Layout>\n      </Layout>\n    )\n    return (\n      <DocumentTitle title={this.getPageTitle()}>\n        <ContainerQuery query={query}>\n          {params => (\n            <MenuContext.Provider value={this.getContext()}>\n              <div className={classNames(params)}>{layout}</div>\n            </MenuContext.Provider>\n          )}\n        </ContainerQuery>\n      </DocumentTitle>\n    )\n  }\n}\n\nexport default BasicLayout\n"]},"metadata":{},"sourceType":"module"}