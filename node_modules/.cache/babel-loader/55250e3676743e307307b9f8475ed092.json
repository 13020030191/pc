{"ast":null,"code":"/**\n * good-storage v1.1.0\n * (c) 2018 ustbhuangyi\n */\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/**\n * 本地存储实现,封装localStorage和sessionStorage\n */\n\n\nvar store = {\n  /* eslint-disable no-undef */\n  version: '1.1.0',\n  storage: window.localStorage,\n  session: {\n    storage: window.sessionStorage\n  }\n};\nvar api = {\n  set: function set(key, val) {\n    if (this.disabled) {\n      return;\n    }\n\n    if (val === undefined) {\n      return this.remove(key);\n    }\n\n    this.storage.setItem(key, serialize(val));\n    return val;\n  },\n  get: function get(key, def) {\n    if (this.disabled) {\n      return def;\n    }\n\n    var val = deserialize(this.storage.getItem(key));\n    return val === undefined ? def : val;\n  },\n  has: function has(key) {\n    return this.get(key) !== undefined;\n  },\n  remove: function remove(key) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.storage.removeItem(key);\n  },\n  clear: function clear() {\n    if (this.disabled) {\n      return;\n    }\n\n    this.storage.clear();\n  },\n  getAll: function getAll() {\n    if (this.disabled) {\n      return null;\n    }\n\n    var ret = {};\n    this.forEach(function (key, val) {\n      ret[key] = val;\n    });\n    return ret;\n  },\n  forEach: function forEach(callback) {\n    if (this.disabled) {\n      return;\n    }\n\n    for (var i = 0; i < this.storage.length; i++) {\n      var key = this.storage.key(i);\n      callback(key, this.get(key));\n    }\n  }\n};\n\n_extends(store, api);\n\n_extends(store.session, api);\n\nfunction serialize(val) {\n  return JSON.stringify(val);\n}\n\nfunction deserialize(val) {\n  if (typeof val !== 'string') {\n    return undefined;\n  }\n\n  try {\n    return JSON.parse(val);\n  } catch (e) {\n    return val || undefined;\n  }\n}\n\ntry {\n  var testKey = '__storejs__';\n  store.set(testKey, testKey);\n\n  if (store.get(testKey) !== testKey) {\n    store.disabled = true;\n  }\n\n  store.remove(testKey);\n} catch (e) {\n  store.disabled = true;\n}\n\nexport default store;","map":null,"metadata":{},"sourceType":"module"}