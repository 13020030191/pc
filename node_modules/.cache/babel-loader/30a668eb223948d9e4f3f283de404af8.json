{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/popover/style/css\";\nimport _Popover from \"antd/es/popover\";\nimport \"antd/es/progress/style/css\";\nimport _Progress from \"antd/es/progress\";\nimport _objectSpread from \"/Users/yzf/Desktop/github/pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/select/style/css\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\n\nvar _jsxFileName = \"/Users/yzf/Desktop/github/pc/src/pages/User/Register.js\",\n    _dec,\n    _class,\n    _temp;\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { stringify } from 'qs';\nimport styles from './Register.less';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\nconst InputGroup = _Input.Group; //密码状态\n\nconst passwordStatusMap = {\n  ok: React.createElement(\"div\", {\n    className: styles.success,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"\\u5F3A\\u5EA6\\uFF1A\\u5F3A\"),\n  pass: React.createElement(\"div\", {\n    className: styles.warning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\u5F3A\\u5EA6\\uFF1A\\u4E2D\"),\n  poor: React.createElement(\"div\", {\n    className: styles.error,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"\\u5F3A\\u5EA6\\uFF1A\\u592A\\u77ED\")\n};\nconst passwordProgressMap = {\n  ok: 'success',\n  pass: 'normal',\n  poor: 'exception'\n};\nlet Register = (_dec = _Form.create(), _dec(_class = (_temp = class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleComfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.onGetCaptcha = () => {\n      let count = 59;\n      this.setState({\n        count: count\n      });\n      this.interval = setInterval(() => {\n        count -= 1;\n        this.setState({\n          count: count\n        });\n\n        if (count === 0) {\n          clearInterval(this.interval);\n        }\n      }, 1000);\n    };\n\n    this.getPasswordStatus = () => {\n      const form = this.props.form;\n      const value = form.getFieldValue('password');\n\n      if (value && value.length > 9) {\n        return 'ok';\n      }\n\n      if (value && value.length > 5) {\n        return 'pass';\n      }\n\n      return 'poor';\n    };\n\n    this.checkPassword = (rule, value, callback) => {\n      //value默认是undefined，!value是true，!!value则是false\n      if (!value) {\n        this.setState({\n          help: '请输入密码！',\n          visible: !!value\n        });\n        callback('error');\n      } else {\n        this.setState({\n          help: ''\n        });\n\n        if (!this.state.visible) {\n          this.setState({\n            visible: !!value\n          });\n        }\n\n        if (value.length < 6) {\n          callback('error');\n        } else {\n          const form = this.props.form;\n\n          if (value && this.state.confirmDirty) {\n            form.validateFields(['confirm'], {\n              force: true\n            });\n          }\n\n          callback();\n        }\n      }\n    };\n\n    this.checkConfirm = (rule, value, callback) => {\n      const form = this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('两次输入的密码不匹配');\n      } else {\n        callback();\n      }\n    };\n\n    this.changePrefix = value => {\n      this.setState({\n        prefix: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const history = this.props.history;\n      this.props.form.validateFields({\n        force: true\n      }, (err, values) => {\n        if (!err) {\n          history.push({\n            pathname: '/user/register-result',\n            search: stringify(_objectSpread({}, values, {\n              prefix: this.state.prefix\n            }))\n          });\n        }\n      });\n    };\n\n    this.renderPasswordProgress = () => {\n      const form = this.props.form;\n      const value = form.getFieldValue('password');\n      const passwordStatus = this.getPasswordStatus();\n      return value && value.length ? React.createElement(\"div\", {\n        className: styles[\"progress-\".concat(passwordStatus)],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(_Progress, {\n        status: passwordProgressMap[passwordStatus],\n        className: styles.progress,\n        strokeWidth: 6,\n        percent: value.length * 10 > 100 ? 100 : value.length * 10,\n        showInfo: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })) : null;\n    };\n\n    this.state = {\n      count: 0,\n      confirmDirty: false,\n      visible: false,\n      help: '',\n      prefix: '86',\n      submitting: false\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const form = this.props.form;\n    const _this$state = this.state,\n          count = _this$state.count,\n          help = _this$state.help,\n          visible = _this$state.visible,\n          prefix = _this$state.prefix,\n          submitting = _this$state.submitting;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\"), React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, getFieldDecorator('mail', {\n      rules: [{\n        required: true,\n        message: '请输入邮箱地址！'\n      }, {\n        type: 'email',\n        message: '邮箱地址格式错误！'\n      }]\n    })(React.createElement(_Input, {\n      size: \"large\",\n      autoComplete: \"off\",\n      placeholder: \"\\u90AE\\u7BB1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      help: help,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(_Popover, {\n      content: React.createElement(\"div\", {\n        style: {\n          padding: '4px 0'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, passwordStatusMap[this.getPasswordStatus()], this.renderPasswordProgress(), React.createElement(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"\\u8BF7\\u81F3\\u5C11\\u8F93\\u5165 6 \\u4E2A\\u5B57\\u7B26\\u3002\\u8BF7\\u4E0D\\u8981\\u4F7F\\u7528\\u5BB9\\u6613\\u88AB\\u731C\\u5230\\u7684\\u5BC6\\u7801\\u3002\")),\n      overlayStyle: {\n        width: 240\n      },\n      placement: \"right\",\n      visible: visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        validator: this.checkPassword\n      }]\n    })(React.createElement(_Input, {\n      size: \"large\",\n      autoComplete: \"off\",\n      type: \"password\",\n      placeholder: \"\\u81F3\\u5C116\\u4F4D\\u5BC6\\u7801\\uFF0C\\u533A\\u5206\\u5927\\u5C0F\\u5199\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, getFieldDecorator('confirm', {\n      rules: [{\n        required: true,\n        message: '请确认密码！'\n      }, {\n        validator: this.checkConfirm\n      }]\n    })(React.createElement(_Input, {\n      size: \"large\",\n      type: \"password\",\n      autoComplete: \"off\",\n      placeholder: \"\\u786E\\u8BA4\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(InputGroup, {\n      compact: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(_Select, {\n      size: \"large\",\n      value: prefix,\n      onChange: this.changePrefix,\n      style: {\n        width: '20%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"86\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"+86\"), React.createElement(Option, {\n      value: \"87\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"+87\")), getFieldDecorator('mobile', {\n      rules: [{\n        required: true,\n        message: '请输入手机号！'\n      }, {\n        pattern: /^1\\d{10}$/,\n        message: '手机号格式错误！'\n      }]\n    })(React.createElement(_Input, {\n      size: \"large\",\n      autoComplete: \"off\",\n      style: {\n        width: '80%'\n      },\n      placeholder: \"11\\u4F4D\\u624B\\u673A\\u53F7\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    })))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      gutter: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, getFieldDecorator('captcha', {\n      rules: [{\n        required: true,\n        message: '请输入验证码！'\n      }]\n    })(React.createElement(_Input, {\n      size: \"large\",\n      autoComplete: \"off\",\n      placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }))), React.createElement(_Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      size: \"large\",\n      disabled: count,\n      className: styles.getCaptcha,\n      onClick: this.onGetCaptcha,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, count ? \"\".concat(count, \" s\") : '获取验证码')))), React.createElement(FormItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      size: \"large\",\n      loading: submitting,\n      className: styles.submit,\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\"), React.createElement(Link, {\n      className: styles.login,\n      to: \"/user/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"\\u4F7F\\u7528\\u5DF2\\u6709\\u8D26\\u6237\\u767B\\u5F55\"))));\n  }\n\n}, _temp)) || _class);\nexport default Register;","map":{"version":3,"sources":["/Users/yzf/Desktop/github/pc/src/pages/User/Register.js"],"names":["React","Component","Link","stringify","styles","FormItem","Item","Option","InputGroup","Group","passwordStatusMap","ok","success","pass","warning","poor","error","passwordProgressMap","Register","create","constructor","props","handleComfirmBlur","e","value","target","setState","confirmDirty","state","onGetCaptcha","count","interval","setInterval","clearInterval","getPasswordStatus","form","getFieldValue","length","checkPassword","rule","callback","help","visible","validateFields","force","checkConfirm","changePrefix","prefix","handleSubmit","preventDefault","history","err","values","push","pathname","search","renderPasswordProgress","passwordStatus","progress","submitting","componentWillUnmount","render","getFieldDecorator","main","rules","required","message","type","padding","marginTop","width","validator","pattern","getCaptcha","submit","login"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Input, Button, Select, Row, Col, Popover, Progress } from 'antd'\nimport { stringify } from 'qs'\nimport styles from './Register.less'\n\nconst FormItem = Form.Item\nconst {Option} = Select\nconst InputGroup = Input.Group\n\n//密码状态\nconst passwordStatusMap = {\n  ok: <div className={styles.success}>强度：强</div>,\n  pass: <div className={styles.warning}>强度：中</div>,\n  poor: <div className={styles.error}>强度：太短</div>,\n}\n\nconst passwordProgressMap = {\n  ok: 'success',\n  pass: 'normal',\n  poor: 'exception',\n}\n\n@Form.create()\nclass Register extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      count: 0,\n      confirmDirty: false,\n      visible: false,\n      help: '',\n      prefix: '86',\n      submitting: false,\n    }\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n\n  handleComfirmBlur = (e) => {\n    const {value} = e.target\n    this.setState({confirmDirty: this.state.confirmDirty || !!value})\n  }\n\n  //倒计时\n  onGetCaptcha = () => {\n    let count = 59\n    this.setState({count: count})\n    this.interval = setInterval(() => {\n      count -= 1\n      this.setState({count: count})\n      if (count === 0) {\n        clearInterval(this.interval)\n      }\n    }, 1000)\n  }\n\n  //密码状态\n  getPasswordStatus = () => {\n    const {form} = this.props\n    const value = form.getFieldValue('password')\n    if (value && value.length > 9) {\n      return 'ok'\n    }\n    if (value && value.length > 5) {\n      return 'pass'\n    }\n    return 'poor'\n  }\n\n  //验证密码\n  checkPassword = (rule, value, callback) => {\n    //value默认是undefined，!value是true，!!value则是false\n    if (!value) {\n      this.setState({\n        help: '请输入密码！',\n        visible: !!value,\n      })\n      callback('error')\n    } else {\n      this.setState({\n        help: '',\n      })\n      if (!this.state.visible) {\n        this.setState({\n          visible: !!value,\n        })\n      }\n      if (value.length < 6) {\n        callback('error')\n      } else {\n        const {form} = this.props\n        if (value && this.state.confirmDirty) {\n          form.validateFields(['confirm'], {force: true})\n        }\n        callback()\n      }\n    }\n  }\n\n  //两次密码匹配\n  checkConfirm = (rule, value, callback) => {\n    const {form} = this.props\n    if (value && value !== form.getFieldValue('password')) {\n      callback('两次输入的密码不匹配')\n    } else {\n      callback()\n    }\n  }\n\n  //区号改变\n  changePrefix = (value) => {\n    this.setState({\n      prefix: value,\n    })\n  }\n\n  //提交\n  handleSubmit = (e) => {\n    e.preventDefault()\n    const {history} = this.props\n    this.props.form.validateFields({force: true},\n      (err, values) => {\n        if (!err) {\n          history.push({\n            pathname: '/user/register-result',\n            search: stringify({\n              ...values,\n              prefix: this.state.prefix,\n            }),\n          })\n        }\n      })\n  }\n\n  //渲染进度条\n  renderPasswordProgress = () => {\n    const {form} = this.props\n    const value = form.getFieldValue('password')\n    const passwordStatus = this.getPasswordStatus()\n    return value && value.length ? (\n      <div className={styles[`progress-${passwordStatus}`]}>\n        <Progress\n          status={passwordProgressMap[passwordStatus]}\n          className={styles.progress}\n          strokeWidth={6}\n          percent={value.length * 10 > 100 ? 100 : value.length * 10}\n          showInfo={false}\n        />\n      </div>\n    ) : null\n  }\n\n  render () {\n    const {form} = this.props\n    const {count, help, visible, prefix, submitting} = this.state\n    const {getFieldDecorator} = form\n    return (\n      <div className={styles.main}>\n        <h3>注册</h3>\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem>\n            {getFieldDecorator('mail', {\n              rules: [\n                {\n                  required: true,\n                  message: '请输入邮箱地址！',\n                },\n                {\n                  type: 'email',\n                  message: '邮箱地址格式错误！',\n                },\n              ],\n            })(<Input size=\"large\" autoComplete=\"off\" placeholder=\"邮箱\"/>)}\n          </FormItem>\n          <FormItem help={help}>\n            <Popover\n              content={\n                <div style={{padding: '4px 0'}}>\n                  {passwordStatusMap[this.getPasswordStatus()]}\n                  {this.renderPasswordProgress()}\n                  <div style={{marginTop: '10px'}}>\n                    请至少输入 6 个字符。请不要使用容易被猜到的密码。\n                  </div>\n                </div>\n              }\n              overlayStyle={{width: 240}}\n              placement=\"right\"\n              visible={visible}\n            >\n              {\n                getFieldDecorator('password', {\n                  rules: [\n                    {\n                      validator: this.checkPassword,\n                    },\n                  ],\n                })(<Input size=\"large\" autoComplete=\"off\" type=\"password\"\n                          placeholder=\"至少6位密码，区分大小写\"/>)\n              }\n            </Popover>\n          </FormItem>\n          <FormItem>\n            {\n              getFieldDecorator('confirm', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请确认密码！',\n                  },\n                  {\n                    validator: this.checkConfirm,\n                  },\n                ],\n              })(<Input size=\"large\" type=\"password\" autoComplete=\"off\"\n                        placeholder=\"确认密码\"/>)\n            }\n          </FormItem>\n          <FormItem>\n            <InputGroup compact>\n              <Select\n                size=\"large\"\n                value={prefix}\n                onChange={this.changePrefix}\n                style={{width: '20%'}}\n              >\n                <Option value=\"86\">+86</Option>\n                <Option value=\"87\">+87</Option>\n              </Select>\n              {\n                getFieldDecorator('mobile', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入手机号！',\n                    },\n                    {\n                      pattern: /^1\\d{10}$/,\n                      message: '手机号格式错误！',\n                    },\n                  ],\n                })(<Input size=\"large\" autoComplete=\"off\" style={{width: '80%'}}\n                          placeholder=\"11位手机号\"/>)\n              }\n            </InputGroup>\n          </FormItem>\n          <FormItem>\n            <Row gutter={8}>\n              <Col span={16}>\n                {\n                  getFieldDecorator('captcha', {\n                    rules: [\n                      {\n                        required: true,\n                        message: '请输入验证码！',\n                      },\n                    ],\n                  })(<Input size=\"large\" autoComplete=\"off\" placeholder=\"验证码\"/>)\n                }\n              </Col>\n              <Col span={8}>\n                <Button\n                  size=\"large\"\n                  disabled={count}\n                  className={styles.getCaptcha}\n                  onClick={this.onGetCaptcha}\n                >{count ? `${count} s` : '获取验证码'}</Button>\n              </Col>\n            </Row>\n          </FormItem>\n          <FormItem>\n            <Button\n              size=\"large\"\n              loading={submitting}\n              className={styles.submit}\n              type=\"primary\"\n              htmlType=\"submit\"\n            >注册</Button>\n            <Link className={styles.login} to=\"/user/login\">使用已有账户登录</Link>\n          </FormItem>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}