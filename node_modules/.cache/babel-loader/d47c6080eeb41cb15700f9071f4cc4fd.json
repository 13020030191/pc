{"ast":null,"code":"import \"antd/es/spin/style/css\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/dropdown/style/css\";\nimport _Dropdown from \"antd/es/dropdown\";\nimport \"antd/es/avatar/style/css\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/divider/style/css\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/menu/style/css\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport _applyDecoratedDescriptor from \"/Users/yzf/Desktop/github/pc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/yzf/Desktop/github/pc/src/components/GlobalHeader/index.js\";\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Debounce from 'lodash-decorators/debounce';\nimport styles from './index.less';\nlet GlobalHeader = (_dec = Debounce(600), (_class = (_temp = class GlobalHeader extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.toggle = () => {\n      const _this$props = this.props,\n            collapsed = _this$props.collapsed,\n            onCollapse = _this$props.onCollapse;\n      onCollapse(!collapsed);\n      this.triggerResizeEvent();\n    };\n\n    this.onClear = tabTitle => {\n      console.log(tabTitle);\n    };\n  }\n\n  componentWillUnmount() {\n    this.triggerResizeEvent.cancel();\n  } //获取notice列表\n  // getNoticeData = (notices) => {\n  //   if (notices.length === 0) {\n  //     return {}\n  //   }\n  //   const newNotices = notices.map(notice => {\n  //     const newNotice = { ...notice }\n  //     if (newNotice.datetime) {\n  //       newNotice.datetime = moment(notice.datetime).fromNow()\n  //     }\n  //     // transform id to item key\n  //     if (newNotice.id) {\n  //       newNotice.key = newNotice.id\n  //     }\n  //     if (newNotice.extra && newNotice.status) {\n  //       const color = {\n  //         todo: '',\n  //         processing: 'blue',\n  //         urgent: 'red',\n  //         doing: 'gold',\n  //       }[newNotice.status]\n  //       newNotice.extra = (\n  //         <Tag color={color} style={{ marginRight: 0 }}>\n  //           {newNotice.extra}\n  //         </Tag>\n  //       )\n  //     }\n  //     return newNotice\n  //   })\n  //   return groupBy(newNotices, 'type')\n  // }\n  //左侧菜单展开收缩\n\n\n  triggerResizeEvent() {\n    const event = document.createEvent('HTMLEvents');\n    event.initEvent('resize', true, false);\n    window.dispatchEvent(event);\n    console.log('监听窗口事件');\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          _this$props2$currentU = _this$props2.currentUser,\n          currentUser = _this$props2$currentU === void 0 ? {} : _this$props2$currentU,\n          collapsed = _this$props2.collapsed,\n          isMobile = _this$props2.isMobile,\n          logo = _this$props2.logo,\n          onMenuClick = _this$props2.onMenuClick;\n    const menu = React.createElement(_Menu, {\n      className: styles.menu,\n      selectedKeys: [],\n      onClick: onMenuClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(_Menu.Item, {\n      key: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), \"\\u9000\\u51FA\\u767B\\u5F55\")); // const noticeData = this.getNoticeData(notices)\n\n    return React.createElement(\"div\", {\n      className: styles.header,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, isMobile && [React.createElement(Link, {\n      to: \"/\",\n      className: styles.logo,\n      key: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      width: \"32\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(_Divider, {\n      type: \"vertical\",\n      key: \"line\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })], React.createElement(_Icon, {\n      className: styles.trigger,\n      type: collapsed ? 'menu-unfold' : 'menu-fold',\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: styles.right,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, currentUser.name ? React.createElement(_Dropdown, {\n      overlay: menu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"\".concat(styles.action, \" \").concat(styles.account),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(_Avatar, {\n      size: \"small\",\n      className: styles.avatar,\n      src: currentUser.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: styles.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, currentUser.name))) : React.createElement(_Spin, {\n      size: \"small\",\n      style: {\n        marginLeft: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })));\n  }\n\n}, _temp), (_applyDecoratedDescriptor(_class.prototype, \"triggerResizeEvent\", [_dec], Object.getOwnPropertyDescriptor(_class.prototype, \"triggerResizeEvent\"), _class.prototype)), _class));\nexport default GlobalHeader;","map":{"version":3,"sources":["/Users/yzf/Desktop/github/pc/src/components/GlobalHeader/index.js"],"names":["React","Component","Link","Debounce","styles","GlobalHeader","toggle","props","collapsed","onCollapse","triggerResizeEvent","onClear","tabTitle","console","log","componentWillUnmount","cancel","event","document","createEvent","initEvent","window","dispatchEvent","render","currentUser","isMobile","logo","onMenuClick","menu","header","trigger","right","name","action","account","avatar","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Debounce from 'lodash-decorators/debounce'\nimport { Menu, Icon, Spin, Dropdown, Avatar, Divider } from 'antd'\n\nimport styles from './index.less'\n\nclass GlobalHeader extends Component {\n  componentWillUnmount () {\n    this.triggerResizeEvent.cancel()\n  }\n\n  //获取notice列表\n  // getNoticeData = (notices) => {\n  //   if (notices.length === 0) {\n  //     return {}\n  //   }\n  //   const newNotices = notices.map(notice => {\n  //     const newNotice = { ...notice }\n  //     if (newNotice.datetime) {\n  //       newNotice.datetime = moment(notice.datetime).fromNow()\n  //     }\n  //     // transform id to item key\n  //     if (newNotice.id) {\n  //       newNotice.key = newNotice.id\n  //     }\n  //     if (newNotice.extra && newNotice.status) {\n  //       const color = {\n  //         todo: '',\n  //         processing: 'blue',\n  //         urgent: 'red',\n  //         doing: 'gold',\n  //       }[newNotice.status]\n  //       newNotice.extra = (\n  //         <Tag color={color} style={{ marginRight: 0 }}>\n  //           {newNotice.extra}\n  //         </Tag>\n  //       )\n  //     }\n  //     return newNotice\n  //   })\n  //   return groupBy(newNotices, 'type')\n  // }\n\n  //左侧菜单展开收缩\n  toggle = () => {\n    const { collapsed, onCollapse } = this.props\n    onCollapse(!collapsed)\n    this.triggerResizeEvent()\n  }\n\n  @Debounce(600)\n  \n  triggerResizeEvent () {\n    const event = document.createEvent('HTMLEvents')\n    event.initEvent('resize', true, false)\n    window.dispatchEvent(event)\n    console.log('监听窗口事件')\n  }\n\n  onClear = (tabTitle) => {\n    console.log(tabTitle)\n  }\n\n  render () {\n    const {\n      currentUser = {},\n      collapsed,\n      isMobile,\n      logo,\n      onMenuClick,\n    } = this.props\n    const menu = (\n      <Menu className={styles.menu} selectedKeys={[]} onClick={onMenuClick}>\n        {/* <Menu.Item key='userCenter'>\n          <Icon type=\"user\"/>个人中心\n        </Menu.Item>\n        <Menu.Item key='userSettings'>\n          <Icon type=\"setting\"/>个人设置\n        </Menu.Item>\n        <Menu.Item key=\"triggerError\">\n          <Icon type=\"close-circle\"/>触发报错\n        </Menu.Item> */}\n        <Menu.Item key=\"logout\">\n          <Icon type=\"logout\"/>退出登录\n        </Menu.Item>\n      </Menu>\n    )\n    // const noticeData = this.getNoticeData(notices)\n    return (\n      <div className={styles.header}>\n        {\n          isMobile && [\n            <Link to=\"/\" className={styles.logo} key=\"logo\">\n              <img src={logo} alt=\"logo\" width=\"32\"/>\n            </Link>,\n            <Divider type=\"vertical\" key=\"line\"/>,\n          ]\n        }\n        <Icon\n          className={styles.trigger}\n          type={collapsed ? 'menu-unfold' : 'menu-fold'}\n          onClick={this.toggle}\n        />\n        <div className={styles.right}>\n          {\n            currentUser.name ? (\n              <Dropdown overlay={menu}>\n                <span className={`${styles.action} ${styles.account}`}>\n                  <Avatar size=\"small\" className={styles.avatar}\n                          src={currentUser.avatar}/>\n                  <span className={styles.name}>{currentUser.name}</span>\n                </span>\n              </Dropdown>\n            ) : (\n              <Spin size=\"small\" style={{ marginLeft: 8 }}/>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GlobalHeader\n\n\n\n"]},"metadata":{},"sourceType":"module"}