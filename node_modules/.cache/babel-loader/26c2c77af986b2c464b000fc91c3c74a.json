{"ast":null,"code":"import \"antd/es/checkbox/style/css\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport \"antd/es/alert/style/css\";\nimport _Alert from \"antd/es/alert\";\nimport \"ant-design-pro/lib/Login/style\";\nimport _Login from \"ant-design-pro/lib/Login\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/yzf/Desktop/antd/src/pages/User/Login.js\";\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport styles from './Login.less';\nconst Tab = _Login.Tab,\n      UserName = _Login.UserName,\n      Password = _Login.Password,\n      Mobile = _Login.Mobile,\n      Captcha = _Login.Captcha,\n      Submit = _Login.Submit;\nlet LoginPage = (_dec = connect(({\n  userInfo\n}) => ({\n  userInfo\n}), dispatch => ({\n  setUserInfo: data => dispatch(actions.setUserInfo(data))\n})), _dec(_class = (_temp = class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeAutoLogin = e => {\n      this.setState({\n        autoLogin: e.target.checked\n      });\n    };\n\n    this.renderMessage = content => {\n      return React.createElement(_Alert, {\n        style: {\n          marginBottom: 24\n        },\n        message: content,\n        type: \"error\",\n        showIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    };\n\n    this.onTabChange = type => {\n      this.setState({\n        type: type\n      });\n    };\n\n    this.onGetCaptcha = () => new Promise((resolve, reject) => {\n      this.loginForm.validateFields(['mobile'], {}, (err, values) => {\n        if (err) {\n          reject(err);\n        } else {\n          console.log(values);\n        }\n      });\n    });\n\n    this.handleSubmit = (err, values) => {\n      const setUserInfo = this.props.setUserInfo;\n\n      if (this.state.type === 'account') {\n        if (!err && (values.username !== 'yzf' || values.password !== '264326')) {\n          this.setState({\n            notice: '账户或密码错误（yzf/264326）！'\n          });\n        } else if (!err) {\n          this.setState({\n            submitting: true\n          });\n          setTimeout(() => {\n            setUserInfo(values.username);\n            console.log(values.username, values.password);\n          }, 1000);\n        }\n      } else {\n        if (!err) {\n          this.setState({\n            submitting: true\n          });\n          setUserInfo(values.mobile);\n          console.log(values.mobile, values.captcha);\n        }\n      }\n    };\n\n    this.handleRegister = () => {\n      _message.warning('此功能还没做, 请勿点击!!!');\n    };\n\n    this.state = {\n      type: 'account',\n      autoLogin: true,\n      notice: '',\n      submitting: false\n    };\n  } //自动登录\n\n\n  render() {\n    const _this$state = this.state,\n          type = _this$state.type,\n          autoLogin = _this$state.autoLogin,\n          notice = _this$state.notice,\n          submitting = _this$state.submitting;\n    const rulesOption = {\n      username: [{\n        required: true,\n        message: '请输入账号！'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码！'\n      }],\n      mobile: [{\n        required: true,\n        message: '请输入手机号！'\n      }, {\n        pattern: /^1\\d{10}$/,\n        message: '手机号格式错误！'\n      }]\n    };\n    return React.createElement(\"div\", {\n      className: styles.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(_Login, {\n      defaultActiveKey: type,\n      onTabChange: this.onTabChange,\n      onSubmit: this.handleSubmit,\n      ref: ref => {\n        this.loginForm = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Tab, {\n      key: \"account\",\n      tab: \"\\u8D26\\u6237\\u5BC6\\u7801\\u767B\\u5F55\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.notice && this.renderMessage(notice), React.createElement(UserName, {\n      name: \"username\",\n      autoComplete: \"off\",\n      placeholder: \"yzf\",\n      rules: rulesOption.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Password, {\n      name: \"password\",\n      autoComplete: \"off\",\n      placeholder: \"264326\",\n      rules: rulesOption.password,\n      onPressEnter: () => this.loginForm.validateFields(this.handleSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), React.createElement(Tab, {\n      key: \"mobile\",\n      tab: \"\\u624B\\u673A\\u53F7\\u767B\\u5F55\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Mobile, {\n      name: \"mobile\",\n      autoComplete: \"off\",\n      placeholder: \"\\u624B\\u673A\\u53F7\",\n      maxLength: 11,\n      rules: rulesOption.mobile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(Captcha, {\n      name: \"captcha\",\n      autoComplete: \"off\",\n      placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n      maxLength: 6,\n      onGetCaptcha: this.onGetCaptcha,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(_Checkbox, {\n      checked: autoLogin,\n      onChange: this.changeAutoLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"\\u81EA\\u52A8\\u767B\\u5F55\"), React.createElement(\"span\", {\n      className: \"link-button\",\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\")), React.createElement(Submit, {\n      loading: submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\"), React.createElement(\"div\", {\n      className: styles.other,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.register,\n      onClick: handleRegister,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\\u8D26\\u6237\"))));\n  }\n\n}, _temp)) || _class);\nexport default LoginPage;","map":{"version":3,"sources":["/Users/yzf/Desktop/antd/src/pages/User/Login.js"],"names":["React","Component","Link","connect","actions","styles","Tab","UserName","Password","Mobile","Captcha","Submit","LoginPage","userInfo","dispatch","setUserInfo","data","constructor","props","changeAutoLogin","e","setState","autoLogin","target","checked","renderMessage","content","marginBottom","onTabChange","type","onGetCaptcha","Promise","resolve","reject","loginForm","validateFields","err","values","console","log","handleSubmit","state","username","password","notice","submitting","setTimeout","mobile","captcha","handleRegister","warning","render","rulesOption","required","message","pattern","main","ref","float","other","register"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Checkbox, Alert, message } from 'antd'\nimport { Login } from 'ant-design-pro'\nimport actions from '../../redux/actions'\n\nimport styles from './Login.less'\n\nconst { Tab, UserName, Password, Mobile, Captcha, Submit } = Login\n\n@connect(\n  ({ userInfo }) => ({ userInfo }),\n  dispatch => ({\n    setUserInfo: data => dispatch(actions.setUserInfo(data))\n  })\n)\nclass LoginPage extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      type: 'account',\n      autoLogin: true,\n      notice: '',\n      submitting: false,\n    }\n  }\n\n  //自动登录\n  changeAutoLogin = (e) => {\n    this.setState({\n      autoLogin: e.target.checked,\n    })\n  }\n\n  //错误弹框\n  renderMessage = (content) => {\n    return <Alert\n      style={{ marginBottom: 24 }}\n      message={content}\n      type=\"error\"\n      showIcon/>\n  }\n\n  //tab切换\n  onTabChange = (type) => {\n    this.setState({\n      type: type,\n    })\n  }\n\n  //验证码回调\n  onGetCaptcha = () =>\n    new Promise((resolve, reject) => {\n      this.loginForm.validateFields(['mobile'], {}, (err, values) => {\n        if (err) {\n          reject(err)\n        } else {\n          console.log(values)\n        }\n      })\n    })\n\n  //登录\n  handleSubmit = (err, values) => {\n    const { setUserInfo } = this.props\n    if (this.state.type === 'account') {\n      if (!err &&\n        (values.username !== 'yzf' || values.password !== '264326')) {\n        this.setState({\n          notice: '账户或密码错误（yzf/264326）！',\n        })\n      } else if (!err) {\n        this.setState({\n          submitting: true,\n        })\n        setTimeout(() => {\n          setUserInfo(values.username)\n          console.log(values.username, values.password)\n        }, 1000)\n      }\n    } else {\n      if (!err) {\n        this.setState({\n          submitting: true,\n        })\n        setUserInfo(values.mobile)\n        console.log(values.mobile, values.captcha)\n      }\n    }\n  }\n  // 注册\n  handleRegister = () => {\n    message.warning('此功能还没做, 请勿点击!!!')\n  }\n\n  render () {\n    const { type, autoLogin, notice, submitting } = this.state\n    const rulesOption = {\n      username: [\n        {\n          required: true, message: '请输入账号！',\n        },\n      ],\n      password: [\n        {\n          required: true, message: '请输入密码！',\n        },\n      ],\n      mobile: [\n        {\n          required: true, message: '请输入手机号！',\n        },\n        {\n          pattern: /^1\\d{10}$/,\n          message: '手机号格式错误！',\n        },\n      ],\n    }\n    return (\n      <div className={styles.main}>\n        <Login\n          defaultActiveKey={type}\n          onTabChange={this.onTabChange}\n          onSubmit={this.handleSubmit}\n          ref={ref => {\n            this.loginForm = ref\n          }}\n        >\n          <Tab key=\"account\" tab=\"账户密码登录\">\n            {\n              this.state.notice &&\n              this.renderMessage(notice)\n            }\n            <UserName name=\"username\" autoComplete=\"off\" placeholder=\"yzf\"\n                      rules={rulesOption.username}/>\n            <Password name=\"password\" autoComplete=\"off\" placeholder=\"264326\"\n                      rules={rulesOption.password}\n                      onPressEnter={\n                        () => this.loginForm.validateFields(\n                          this.handleSubmit)\n                      }\n            />\n          </Tab>\n          <Tab key=\"mobile\" tab=\"手机号登录\">\n            <Mobile name=\"mobile\" autoComplete=\"off\" placeholder=\"手机号\"\n                    maxLength={11}\n                    rules={rulesOption.mobile}/>\n            <Captcha name=\"captcha\" autoComplete=\"off\" placeholder=\"验证码\"\n                     maxLength={6}\n                     onGetCaptcha={this.onGetCaptcha}/>\n          </Tab>\n          <div>\n            <Checkbox checked={autoLogin}\n                      onChange={this.changeAutoLogin}>自动登录</Checkbox>\n            <span className='link-button' style={{ float: 'right' }}>忘记密码</span>\n          </div>\n          <Submit loading={submitting}>登录</Submit>\n          <div className={styles.other}>\n            <div className={styles.register} onClick={handleRegister}>注册账户</div>\n            {/* <Link className={styles.register} to=\"/user/register\">\n              注册账户\n            </Link> */}\n          </div>\n        </Login>\n      </div>\n    )\n  }\n}\n\nexport default LoginPage\n"]},"metadata":{},"sourceType":"module"}