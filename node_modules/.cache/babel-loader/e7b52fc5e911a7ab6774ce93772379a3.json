{"ast":null,"code":"import \"antd/es/row/style/css\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/button/style/css\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/col/style/css\";\nimport _Col from \"antd/es/col\";\nimport \"antd/es/form/style/css\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style/css\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/Users/yzf/Desktop/antd/src/pages/Home/List/index.js\";\nimport React, { Component } from 'react';\nimport PageHeaderWrapper from '@/components/PageHeaderWrapper';\nimport Router from '@/components/Router';\nimport { getRouterData } from '@/router/router';\nimport { getRoutes } from '@/utils/utils';\n\nclass List extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      console.log('Received values of form: ', values);\n    };\n\n    this.renderFormFields = () => {\n      const formItemLayout = {\n        labelCol: {\n          span: 6\n        },\n        wrapperCol: {\n          span: 18\n        }\n      };\n      const formArray = [];\n      const labelArray = ['规则', '状态', '日期'];\n\n      for (let i = 0; i < 3; i++) {\n        formArray.push(React.createElement(_Col, {\n          span: 6,\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(_Form.Item, Object.assign({}, formItemLayout, {\n          label: \"\".concat(labelArray[i]),\n          rules: [{\n            required: true,\n            message: 'Input something!'\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }), React.createElement(_Input, {\n          placeholder: \"placeholder\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }))));\n      }\n\n      return formArray;\n    };\n\n    this.renderSearchForm = () => {\n      return React.createElement(_Form, {\n        name: \"advanced_search\",\n        className: \"ant-advanced-search-form\",\n        onFinish: this.onFinish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(_Row, {\n        gutter: 24,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.renderFormFields(), React.createElement(_Col, {\n        span: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(_Form.Item, Object.assign({}, formItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(_Button, {\n        type: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"\\u67E5\\u8BE2\")))));\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          location = _this$props.location,\n          match = _this$props.match;\n    const routerData = getRouterData();\n    const routes = getRoutes(match.path, routerData);\n    return React.createElement(PageHeaderWrapper, {\n      tabActiveKey: location.pathname.replace(\"\".concat(match.path, \"/\"), ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.renderSearchForm(), React.createElement(Router, {\n      routes: routes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/Users/yzf/Desktop/antd/src/pages/Home/List/index.js"],"names":["React","Component","PageHeaderWrapper","Router","getRouterData","getRoutes","List","onFinish","values","console","log","renderFormFields","formItemLayout","labelCol","span","wrapperCol","formArray","labelArray","i","push","required","message","renderSearchForm","render","props","location","match","routerData","routes","path","pathname","replace"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PageHeaderWrapper from '@/components/PageHeaderWrapper'\r\nimport Router from '@/components/Router'\r\nimport { getRouterData } from '@/router/router'\r\nimport { getRoutes } from '@/utils/utils'\r\nimport { Input, Card, Form, Row, Col, Button } from 'antd';\r\n\r\nclass List extends Component {\r\n  onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n  renderFormFields = () => {\r\n    const formItemLayout = {\r\n      labelCol: { span: 6 },\r\n      wrapperCol: { span: 18 },\r\n    };\r\n    const formArray = [];\r\n    const labelArray = ['规则', '状态', '日期']\r\n    for (let i = 0; i < 3; i++) {\r\n      formArray.push(\r\n        <Col span={6} key={i}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label={`${labelArray[i]}`}\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Input something!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"placeholder\" />\r\n            </Form.Item>\r\n          </Col>\r\n      )\r\n    }\r\n    return formArray\r\n  }\r\n  renderSearchForm = () => {\r\n    \r\n    return (\r\n      <Form\r\n        name=\"advanced_search\"\r\n        className=\"ant-advanced-search-form\"\r\n        onFinish={this.onFinish}\r\n      >\r\n        <Row gutter={24}>\r\n          {this.renderFormFields()}\r\n          <Col span={6}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n            >\r\n                          <Button type=\"primary\">查询</Button>\r\n\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    )\r\n  }\r\n  render () {\r\n    const { location, match } = this.props\r\n    const routerData = getRouterData()\r\n    const routes = getRoutes(match.path, routerData)\r\n    return (\r\n      <PageHeaderWrapper\r\n        tabActiveKey={location.pathname.replace(`${match.path}/`, '')}\r\n      >\r\n        {this.renderSearchForm()}\r\n        <Router routes={routes}></Router>\r\n      </PageHeaderWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List\r\n"]},"metadata":{},"sourceType":"module"}