{"ast":null,"code":"import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/menu/style/css\";\nimport _Menu from \"antd/es/menu\";\nimport \"antd/es/layout/style/css\";\nimport _Layout from \"antd/es/layout\";\nvar _jsxFileName = \"/Users/yzf/Desktop/antd/src/components/SiderMenu/SiderMenu.js\";\nimport React, { PureComponent } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport pathToRegexp from 'path-to-regexp';\nimport { urlToList } from '../../utils/utils';\nimport styles from './index.less';\nconst Sider = _Layout.Sider;\nconst SubMenu = _Menu.SubMenu;\n/*获取导航icon\n* Allow menu.js config icon as string or ReactNode\n*   icon: 'setting',\n*   icon: 'http://demo.com/icon.png',\n*   icon: <Icon type=\"setting\" />,\n* */\n\nconst getIcon = icon => {\n  if (typeof icon === 'string' && icon.indexOf('http') === 0) {\n    return React.createElement(\"img\", {\n      src: icon,\n      alt: \"icon\",\n      className: \"\".concat(styles.icon, \" sider-menu-item-img\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }\n\n  if (typeof icon === 'string') {\n    return React.createElement(_Icon, {\n      type: icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  return icon;\n};\n/**\n * 递归缩小数据\n * [{path:string},{path:string}] => {path,path2}\n * @param menu\n */\n\n\nexport const getFlatMenuKeys = menu => menu.reduce((keys, item) => {\n  keys.push(item.path);\n\n  if (item.children) {\n    return keys.concat(getFlatMenuKeys(item.children));\n  }\n\n  return keys;\n}, []);\n/**\n * 基于路径查找所有匹配的菜单键\n * @param flatMenuKeys:[/abc, /abc/:id, /abc/:id/info]\n * @param paths:[/abc, /abc/:id, /abc/:id/info]\n * @returns {*}\n */\n\nexport const getMenuMatchKeys = (flatMenuKeys, paths) => paths.reduce((matchKeys, path) => matchKeys.concat(flatMenuKeys.filter(item => pathToRegexp(item).test(path))), []);\n\nclass SiderMenu extends PureComponent {\n  constructor(_props) {\n    super(_props);\n\n    this.getDefaultCollapsedSubMenus = props => {\n      const _ref = props || this.props,\n            pathname = _ref.location.pathname;\n\n      return getMenuMatchKeys(this.flatMenuKeys, urlToList(pathname));\n    };\n\n    this.getMenuItemPath = item => {\n      const itemPath = this.conversionPath(item.path);\n      const icon = getIcon(item.icon);\n      const target = item.target,\n            name = item.name;\n\n      if (/^https?:\\/\\//.test(itemPath)) {\n        return React.createElement(\"a\", {\n          href: itemPath,\n          target: target,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, icon, React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, name));\n      }\n\n      return React.createElement(Link, {\n        to: itemPath,\n        target: target,\n        replace: itemPath === this.props.location.pathname,\n        onClick: this.props.isMobile ? () => {\n          this.props.onCollapse(true);\n        } : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, icon, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, name));\n    };\n\n    this.getSubMenuOrItem = item => {\n      if (item.children && item.children.some(child => child.name)) {\n        let childrenItems = this.getNavMenuItems(item.children); // 当无子菜单时就不展示菜单\n\n        if (childrenItems && childrenItems.length > 0) {\n          return React.createElement(SubMenu, {\n            title: item.icon ? React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 126\n              },\n              __self: this\n            }, getIcon(item.icon), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 128\n              },\n              __self: this\n            }, item.name)) : item.name,\n            key: item.path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, childrenItems);\n        }\n\n        return null;\n      } else {\n        return React.createElement(_Menu.Item, {\n          key: item.path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, this.getMenuItemPath(item));\n      }\n    };\n\n    this.getNavMenuItems = menusData => {\n      if (!menusData) {\n        return [];\n      }\n\n      return menusData.filter(item => item.name && !item.hideInMenu).map(item => {\n        let ItemDom = this.getSubMenuOrItem(item);\n        return this.checkPermissionItem(item.authority, ItemDom);\n      }).filter(item => item);\n    };\n\n    this.getSelectedMenuKeys = () => {\n      const pathname = this.props.location.pathname;\n      return getMenuMatchKeys(this.flatMenuKeys, urlToList(pathname));\n    };\n\n    this.checkPermissionItem = (authority, ItemDom) => {\n      if (this.props.Authorized && this.props.Authorized.check) {\n        const check = this.props.Authorized.check;\n        return check(authority, ItemDom);\n      }\n\n      return ItemDom;\n    };\n\n    this.isMainMenu = key => {\n      return this.menus.some(item => key && (item.key === key || item.path === key));\n    };\n\n    this.handleOpenChange = openKeys => {\n      let lastOpenKey = openKeys[openKeys.length - 1];\n      let moreThanOne = openKeys.filter(openKey => this.isMainMenu(openKey)).length > 1;\n      this.setState({\n        openKeys: moreThanOne ? [lastOpenKey] : [...openKeys]\n      });\n    };\n\n    this.conversionPath = path => {\n      if (path && path.indexOf('http') === 0) {\n        return path;\n      } else {\n        return \"/\".concat(path || '').replace(/\\/+/g, '/');\n      }\n    };\n\n    this.menus = _props.menuData;\n    this.flatMenuKeys = getFlatMenuKeys(_props.menuData);\n    this.state = {\n      openKeys: this.getDefaultCollapsedSubMenus(_props)\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.location.pathname !== this.props.location.pathname) {\n      this.setState({\n        openKeys: this.getDefaultCollapsedSubMenus(nextProps)\n      });\n    }\n  } //默认展开的subMenu\n\n\n  render() {\n    const _this$props = this.props,\n          logo = _this$props.logo,\n          collapsed = _this$props.collapsed,\n          onCollapse = _this$props.onCollapse;\n    const openKeys = this.state.openKeys; //不要显示弹出式菜单\n\n    const menuProps = collapsed ? {} : {\n      openKeys\n    };\n    let selectedKeys = this.getSelectedMenuKeys();\n\n    if (!selectedKeys.length) {\n      selectedKeys = [openKeys[openKeys.length - 1]];\n    }\n\n    return React.createElement(Sider, {\n      trigger: null,\n      collapsible: true,\n      collapsed: collapsed,\n      breakpoint: \"lg\",\n      onCollapse: onCollapse,\n      width: 256,\n      className: styles.sider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.logo,\n      key: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"YZF\"))), React.createElement(_Menu, Object.assign({\n      key: \"Menu\",\n      theme: \"dark\",\n      mode: \"inline\"\n    }, menuProps, {\n      onOpenChange: this.handleOpenChange,\n      selectedKeys: selectedKeys,\n      style: {\n        padding: '16px 0',\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), this.getNavMenuItems(this.menus)));\n  }\n\n}\n\nexport default withRouter(SiderMenu);","map":{"version":3,"sources":["/Users/yzf/Desktop/antd/src/components/SiderMenu/SiderMenu.js"],"names":["React","PureComponent","Link","withRouter","pathToRegexp","urlToList","styles","Sider","SubMenu","getIcon","icon","indexOf","getFlatMenuKeys","menu","reduce","keys","item","push","path","children","concat","getMenuMatchKeys","flatMenuKeys","paths","matchKeys","filter","test","SiderMenu","constructor","props","getDefaultCollapsedSubMenus","pathname","location","getMenuItemPath","itemPath","conversionPath","target","name","isMobile","onCollapse","undefined","getSubMenuOrItem","some","child","childrenItems","getNavMenuItems","length","menusData","hideInMenu","map","ItemDom","checkPermissionItem","authority","getSelectedMenuKeys","Authorized","check","isMainMenu","key","menus","handleOpenChange","openKeys","lastOpenKey","moreThanOne","openKey","setState","replace","menuData","state","componentWillReceiveProps","nextProps","render","logo","collapsed","menuProps","selectedKeys","sider","padding","width"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport pathToRegexp from 'path-to-regexp'\nimport { urlToList } from '../../utils/utils'\nimport { Layout, Menu, Icon } from 'antd'\n\nimport styles from './index.less'\n\nconst { Sider } = Layout\nconst { SubMenu } = Menu\n\n/*获取导航icon\n* Allow menu.js config icon as string or ReactNode\n*   icon: 'setting',\n*   icon: 'http://demo.com/icon.png',\n*   icon: <Icon type=\"setting\" />,\n* */\nconst getIcon = (icon) => {\n  if (typeof icon === 'string' && icon.indexOf('http') === 0) {\n    return <img src={icon} alt=\"icon\"\n                className={`${styles.icon} sider-menu-item-img`}/>\n  }\n  if (typeof icon === 'string') {\n    return <Icon type={icon}/>\n  }\n  return icon\n}\n\n/**\n * 递归缩小数据\n * [{path:string},{path:string}] => {path,path2}\n * @param menu\n */\nexport const getFlatMenuKeys = menu =>\n  menu.reduce((keys, item) => {\n    keys.push(item.path)\n    if (item.children) {\n      return keys.concat(getFlatMenuKeys(item.children))\n    }\n    return keys\n  }, [])\n\n/**\n * 基于路径查找所有匹配的菜单键\n * @param flatMenuKeys:[/abc, /abc/:id, /abc/:id/info]\n * @param paths:[/abc, /abc/:id, /abc/:id/info]\n * @returns {*}\n */\nexport const getMenuMatchKeys = (flatMenuKeys, paths) =>\n  paths.reduce((matchKeys, path) => (\n    matchKeys.concat(\n      flatMenuKeys.filter(item => pathToRegexp(item).test(path)),\n    )\n  ), [])\n\nclass SiderMenu extends PureComponent {\n  constructor (props) {\n    super(props)\n    this.menus = props.menuData\n    this.flatMenuKeys = getFlatMenuKeys(props.menuData)\n    this.state = {\n      openKeys: this.getDefaultCollapsedSubMenus(props),\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.location.pathname !== this.props.location.pathname) {\n      this.setState({\n        openKeys: this.getDefaultCollapsedSubMenus(nextProps),\n      })\n    }\n  }\n\n  //默认展开的subMenu\n  getDefaultCollapsedSubMenus = (props) => {\n    const { location: { pathname } } = props || this.props\n    return getMenuMatchKeys(this.flatMenuKeys, urlToList(pathname))\n  }\n\n  /**\n   * 判断是否是http链接.返回 Link 或 a\n   * Judge whether it is http link.return a or Link\n   * @memberof SiderMenu\n   */\n  getMenuItemPath = (item) => {\n    const itemPath = this.conversionPath(item.path)\n    const icon = getIcon(item.icon)\n    const { target, name } = item\n    if (/^https?:\\/\\//.test(itemPath)) {\n      return (\n        <a href={itemPath} target={target}>\n          {icon}\n          <span>{name}</span>\n        </a>\n      )\n    }\n    return (\n      <Link\n        to={itemPath}\n        target={target}\n        replace={itemPath === this.props.location.pathname}\n        onClick={\n          this.props.isMobile\n            ? () => {\n              this.props.onCollapse(true)\n            }\n            : undefined\n        }\n      >\n        {icon}\n        <span>{name}</span>\n      </Link>\n    )\n  }\n\n  //获取子菜单\n  getSubMenuOrItem = (item) => {\n    if (item.children && item.children.some(child => child.name)) {\n      let childrenItems = this.getNavMenuItems(item.children)\n      // 当无子菜单时就不展示菜单\n      if (childrenItems && childrenItems.length > 0) {\n        return (\n          <SubMenu\n            title={\n              item.icon ? (\n                <span>\n                  {getIcon(item.icon)}\n                  <span>{item.name}</span>\n                </span>\n              ) : (item.name)\n            }\n            key={item.path}\n          >\n            {childrenItems}\n          </SubMenu>\n        )\n      }\n      return null\n    } else {\n      return <Menu.Item key={item.path}>{this.getMenuItemPath(item)}</Menu.Item>\n    }\n  }\n\n  //获取菜单子节点\n  getNavMenuItems = (menusData) => {\n    if (!menusData) {\n      return []\n    }\n\n    return menusData.filter(item => item.name && !item.hideInMenu).map(item => {\n      let ItemDom = this.getSubMenuOrItem(item)\n      return this.checkPermissionItem(item.authority, ItemDom)\n    }).filter(item => item)\n  }\n\n  //获取选择节点\n  getSelectedMenuKeys = () => {\n    const { location: { pathname } } = this.props\n    return getMenuMatchKeys(this.flatMenuKeys, urlToList(pathname))\n  }\n\n  //权限检查\n  checkPermissionItem = (authority, ItemDom) => {\n    if (this.props.Authorized && this.props.Authorized.check) {\n      const { check } = this.props.Authorized\n      return check(authority, ItemDom)\n    }\n    return ItemDom\n  }\n\n  //主菜单\n  isMainMenu = (key) => {\n    return this.menus.some(\n      item => key && (item.key === key || item.path === key))\n  }\n\n  //SubMenu 展开/关闭\n  handleOpenChange = (openKeys) => {\n    let lastOpenKey = openKeys[openKeys.length - 1]\n    let moreThanOne = openKeys.filter(\n      openKey => this.isMainMenu(openKey)).length > 1\n    this.setState({\n      openKeys: moreThanOne ? [lastOpenKey] : [...openKeys],\n    })\n  }\n\n  // 转化路径\n  conversionPath = path => {\n    if (path && path.indexOf('http') === 0) {\n      return path\n    } else {\n      return `/${path || ''}`.replace(/\\/+/g, '/')\n    }\n  }\n\n  render () {\n    const { logo, collapsed, onCollapse } = this.props\n    const { openKeys } = this.state\n    //不要显示弹出式菜单\n    const menuProps = collapsed\n      ? {}\n      : {\n        openKeys,\n      }\n    let selectedKeys = this.getSelectedMenuKeys()\n    if (!selectedKeys.length) {\n      selectedKeys = [openKeys[openKeys.length - 1]]\n    }\n\n    return (\n      <Sider\n        trigger={null}\n        collapsible\n        collapsed={collapsed}\n        breakpoint=\"lg\"\n        onCollapse={onCollapse}\n        width={256}\n        className={styles.sider}\n      >\n        <div className={styles.logo} key=\"logo\">\n          <Link to=\"/\">\n            <h1>YZF</h1>\n          </Link>\n        </div>\n        <Menu\n          key=\"Menu\"\n          theme=\"dark\"\n          mode=\"inline\"\n          {...menuProps}\n          onOpenChange={this.handleOpenChange}\n          selectedKeys={selectedKeys}\n          style={{ padding: '16px 0', width: '100%' }}\n        >\n          {this.getNavMenuItems(this.menus)}\n        </Menu>\n      </Sider>\n    )\n\n  }\n}\n\nexport default withRouter(SiderMenu)\n"]},"metadata":{},"sourceType":"module"}