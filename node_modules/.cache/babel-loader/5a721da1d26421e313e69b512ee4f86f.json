{"ast":null,"code":"var _jsxFileName = \"/Users/yzf/Desktop/github/pc/src/components/PageHeaderWrapper/breadcrumb.js\";\nimport React from 'react';\nimport pathToRegexp from 'path-to-regexp';\nimport { Link } from 'react-router-dom';\nimport { urlToList } from '../../utils/utils'; // 渲染Breadcrumb 子节点\n// Render the Breadcrumb child node\n\nconst itemRender = (route, params, routes, paths) => {\n  const last = routes.indexOf(route) === routes.length - 1; // if path is home, use Link。\n\n  if (route.path === '/') {\n    return React.createElement(Link, {\n      to: paths.join('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, route.breadcrumbName);\n  }\n\n  return last || !route.component ? React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, route.breadcrumbName) : React.createElement(Link, {\n    to: paths.join('/'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, route.breadcrumbName);\n};\n\nconst renderItemLocal = item => {\n  return item.name;\n};\n\nexport const getBreadcrumb = (breadcrumbNameMap, url) => {\n  let breadcrumb = breadcrumbNameMap[url];\n\n  if (!breadcrumb) {\n    Object.keys(breadcrumbNameMap).forEach(item => {\n      if (pathToRegexp(item).test(url)) {\n        breadcrumb = breadcrumbNameMap[item];\n      }\n    });\n  }\n\n  return breadcrumb || {};\n};\nexport const getBreadcrumbProps = props => {\n  const routes = props.routes,\n        params = props.params,\n        location = props.location,\n        breadcrumbNameMap = props.breadcrumbNameMap;\n  return {\n    routes,\n    params,\n    routerLocation: location,\n    breadcrumbNameMap\n  };\n};\n\nconst conversionFromProps = props => {\n  const breadcrumbList = props.breadcrumbList;\n  return breadcrumbList.map(item => {\n    const title = item.title,\n          href = item.href;\n    return {\n      path: href,\n      breadcrumbName: title\n    };\n  });\n};\n\nconst conversionFromLocation = (routerLocation, breadcrumbNameMap, props) => {\n  const home = props.home; // Convert the url to an array\n\n  const pathSnippets = urlToList(routerLocation.pathname); // Loop data mosaic routing\n\n  const extraBreadcrumbItems = pathSnippets.map(url => {\n    const currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url);\n\n    if (currentBreadcrumb.inherited) {\n      return null;\n    }\n\n    const name = renderItemLocal(currentBreadcrumb);\n    const hideInBreadcrumb = currentBreadcrumb.hideInBreadcrumb;\n    return name && !hideInBreadcrumb ? {\n      path: url,\n      breadcrumbName: name\n    } : null;\n  }).filter(item => item !== null); // Add home breadcrumbs to your head if defined\n\n  if (home) {\n    extraBreadcrumbItems.unshift({\n      path: '/',\n      breadcrumbName: home\n    });\n  }\n\n  return extraBreadcrumbItems;\n};\n/**\n * 将参数转化为面包屑\n * Convert parameters into breadcrumbs\n */\n\n\nexport const conversionBreadcrumbList = props => {\n  const breadcrumbList = props.breadcrumbList;\n\n  const _getBreadcrumbProps = getBreadcrumbProps(props),\n        routes = _getBreadcrumbProps.routes,\n        params = _getBreadcrumbProps.params,\n        routerLocation = _getBreadcrumbProps.routerLocation,\n        breadcrumbNameMap = _getBreadcrumbProps.breadcrumbNameMap;\n\n  if (breadcrumbList && breadcrumbList.length) {\n    return {\n      routes: conversionFromProps(props),\n      params,\n      itemRender\n    };\n  } // 如果传入 routes 和 params 属性\n  // If pass routes and params attributes\n\n\n  if (routes && params) {\n    return {\n      routes: routes.filter(route => route.breadcrumbName),\n      params,\n      itemRender\n    };\n  } // 根据 location 生成 面包屑\n  // Generate breadcrumbs based on location\n\n\n  if (routerLocation && routerLocation.pathname) {\n    return {\n      routes: conversionFromLocation(routerLocation, breadcrumbNameMap, props),\n      itemRender\n    };\n  }\n\n  return {};\n};","map":{"version":3,"sources":["/Users/yzf/Desktop/github/pc/src/components/PageHeaderWrapper/breadcrumb.js"],"names":["React","pathToRegexp","Link","urlToList","itemRender","route","params","routes","paths","last","indexOf","length","path","join","breadcrumbName","component","renderItemLocal","item","name","getBreadcrumb","breadcrumbNameMap","url","breadcrumb","Object","keys","forEach","test","getBreadcrumbProps","props","location","routerLocation","conversionFromProps","breadcrumbList","map","title","href","conversionFromLocation","home","pathSnippets","pathname","extraBreadcrumbItems","currentBreadcrumb","inherited","hideInBreadcrumb","filter","unshift","conversionBreadcrumbList"],"mappings":"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","sourcesContent":["import React from 'react'\nimport pathToRegexp from 'path-to-regexp'\nimport { Link } from 'react-router-dom'\nimport { urlToList } from '../../utils/utils'\n\n// 渲染Breadcrumb 子节点\n// Render the Breadcrumb child node\nconst itemRender = (route, params, routes, paths) => {\n  const last = routes.indexOf(route) === routes.length - 1\n  // if path is home, use Link。\n  if (route.path === '/') {\n    return <Link to={paths.join('/')}>{route.breadcrumbName}</Link>\n  }\n  return last || !route.component ? (\n    <span>{route.breadcrumbName}</span>\n  ) : (\n    <Link to={paths.join('/')}>{route.breadcrumbName}</Link>\n  )\n}\n\nconst renderItemLocal = item => {\n  return item.name\n}\n\nexport const getBreadcrumb = (breadcrumbNameMap, url) => {\n  let breadcrumb = breadcrumbNameMap[url]\n  if (!breadcrumb) {\n    Object.keys(breadcrumbNameMap).forEach(item => {\n      if (pathToRegexp(item).test(url)) {\n        breadcrumb = breadcrumbNameMap[item]\n      }\n    })\n  }\n  return breadcrumb || {}\n}\n\nexport const getBreadcrumbProps = props => {\n  const { routes, params, location, breadcrumbNameMap } = props\n  return {\n    routes,\n    params,\n    routerLocation: location,\n    breadcrumbNameMap,\n  }\n}\n\nconst conversionFromProps = props => {\n  const { breadcrumbList } = props\n  return breadcrumbList.map(item => {\n    const { title, href } = item\n    return {\n      path: href,\n      breadcrumbName: title,\n    }\n  })\n}\n\nconst conversionFromLocation = (routerLocation, breadcrumbNameMap, props) => {\n  const { home } = props\n  // Convert the url to an array\n  const pathSnippets = urlToList(routerLocation.pathname)\n  // Loop data mosaic routing\n  const extraBreadcrumbItems = pathSnippets\n    .map(url => {\n      const currentBreadcrumb = getBreadcrumb(breadcrumbNameMap, url)\n      if (currentBreadcrumb.inherited) {\n        return null\n      }\n      const name = renderItemLocal(currentBreadcrumb)\n      const { hideInBreadcrumb } = currentBreadcrumb\n      return name && !hideInBreadcrumb\n        ? {\n          path: url,\n          breadcrumbName: name,\n        }\n        : null\n    })\n    .filter(item => item !== null)\n  // Add home breadcrumbs to your head if defined\n  if (home) {\n    extraBreadcrumbItems.unshift({\n      path: '/',\n      breadcrumbName: home,\n    })\n  }\n  return extraBreadcrumbItems\n}\n\n/**\n * 将参数转化为面包屑\n * Convert parameters into breadcrumbs\n */\nexport const conversionBreadcrumbList = props => {\n  const { breadcrumbList } = props\n  const { routes, params, routerLocation, breadcrumbNameMap } = getBreadcrumbProps(props)\n  if (breadcrumbList && breadcrumbList.length) {\n    return {\n      routes: conversionFromProps(props),\n      params,\n      itemRender,\n    }\n  }\n  // 如果传入 routes 和 params 属性\n  // If pass routes and params attributes\n  if (routes && params) {\n    return {\n      routes: routes.filter(route => route.breadcrumbName),\n      params,\n      itemRender,\n    }\n  }\n  // 根据 location 生成 面包屑\n  // Generate breadcrumbs based on location\n  if (routerLocation && routerLocation.pathname) {\n    return {\n      routes: conversionFromLocation(routerLocation, breadcrumbNameMap, props),\n      itemRender,\n    }\n  }\n  return {}\n}\n"]},"metadata":{},"sourceType":"module"}